{"version":3,"sources":["components/Home.jsx","components/Slider.jsx","components/Pattern.jsx","components/Switch.jsx","components/Cascade.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["onColor","Subject","Home","socket","useEffect","subscription","pipe","throttleTime","subscribe","rgb","emit","unsubscribe","className","onChange","color","next","to","onClick","fetch","method","then","res","console","log","toRGBA","r","g","b","Slider","min","max","step","value","startColor","endColor","range","bgColor","Math","round","type","style","backgroundColor","event","target","Pattern","useState","c1","setC1","c2","setC2","n","setN","speed","setSpeed","disableAlpha","background","headers","body","JSON","stringify","Switch","label","isOn","handleToggle","checked","id","htmlFor","Cascade","loop","setLoop","prev","io","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d68f2b2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {Subject} from \"rxjs\";\nimport {throttleTime} from \"rxjs/operators\";\nimport {SketchPicker} from \"react-color\";\nimport {Link} from \"react-router-dom\";\nimport \"../css/App.css\";\n\nconst onColor = new Subject();\n\nfunction Home({ socket }) {\n\n  const sendRainbow = () => {\n    fetch(\"/rainbow\", {\n      method: \"GET\"\n    }).then(res => console.log(res))\n  };\n\n  useEffect(() => {\n    const subscription = onColor.pipe(\n      throttleTime(50)\n    ).subscribe(rgb => socket.emit(\"color\", rgb));\n    return () => subscription.unsubscribe();\n  }, [socket]);\n\n  return (\n      <div className=\"centered-container\">\n        <SketchPicker onChange={color => onColor.next(color.rgb)}/>\n        <div className=\"btn-group\">\n          <div>\n          <Link className=\"link-btn\" to=\"/pattern\"><button className=\"btn btn-nav\">Pattern</button></Link>\n          </div>\n          <div>\n          <button className=\"btn btn-rainbow\" onClick={sendRainbow}>Rainbow</button>\n          </div>\n          <div>\n          <Link className=\"link-btn\" to=\"/cascade\"><button className=\"btn btn-nav\">Cascade</button></Link>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"../css/Slider.css\";\n\nconst toRGBA = color => `rgba(${color.r},${color.g},${color.b},1)`;\n\nfunction Slider({min, max, step, onChange, value}) {\n\n  const startColor = {r: 150, g: 150, b: 150};\n  const endColor = {r: 6, g: 214, b: 160};\n  const range = max - min;\n  const bgColor = toRGBA({\n    r: startColor.r + (value - min) * Math.round((endColor.r - startColor.r) / range),\n    g: startColor.g + (value - min) * Math.round((endColor.g - startColor.g) / range),\n    b: startColor.b + (value - min) * Math.round((endColor.b - startColor.b) / range)\n  });\n\n  return (\n    <div className=\"slider\">\n      <input type=\"range\"\n             style={{backgroundColor: bgColor}}\n             value={value}\n             onChange={event => onChange(event.target.value)}\n             min={min}\n             max={max}\n             step={step}/>\n    </div>\n  )\n\n}\n\nexport default Slider;\n","import React, { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport Slider from \"./Slider\";\nimport \"../css/App.css\";\nimport \"../css/Pattern.css\";\nimport {Link} from \"react-router-dom\";\n\n\nconst toRGBA = color => `rgba(${color.r},${color.g},${color.b},1)`;\n\nconst Pattern = () => {\n\n  const [c1, setC1] = useState({r: 36, g: 240, b: 232});\n  const [c2, setC2] = useState({r: 218, g: 8, b: 191});\n  const [n, setN] = useState(5);\n  const [speed, setSpeed] = useState(2);\n\n  const sendPattern = () => {\n    fetch(\"/pattern\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({c1, c2, n, speed})\n    }).then(res => console.log(res));\n  };\n\n  return (\n    <div className=\"pattern-container\">\n      <div className=\"grid\">\n        <div className=\"picker-container\">\n          <p>First Color</p>\n          <ChromePicker color={c1} onChange={color => setC1(color.rgb)} disableAlpha={true}/>\n        </div>\n        <div className=\"picker-container\">\n          <p>Second Color</p>\n          <ChromePicker color={c2} onChange={color => setC2(color.rgb)} disableAlpha={true}/>\n        </div>\n        <div>\n          <p>Repetitions {n}</p>\n          <Slider value={n} min={1} max={25} step={1} onChange={setN}/>\n        </div>\n        <div>\n          <p>Speed: {speed}</p>\n          <Slider value={speed} min={1} max={10} step={1} onChange={setSpeed}/>\n        </div>\n      </div>\n      <div className=\"actions\">\n        <button className=\"btn btn-nav btn-gradient\" style={\n          {background: `linear-gradient(to right, ${toRGBA(c1)},${toRGBA(c2)})`}\n        } onClick={sendPattern}>Go!</button>\n        <div className=\"btn-group\">\n          <div>\n          <Link to=\"/\" className=\"link-btn\"><button className=\"btn btn-nav\">Back</button></Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n};\n\nexport default Pattern;\n","import React from 'react';\nimport \"../css/Switch.css\";\n\nconst Switch = ({label, isOn, handleToggle}) => {\n  return (\n    <>\n      <input\n        checked={isOn}\n        onChange={handleToggle}\n        className=\"react-switch-checkbox\"\n        id={`react-switch-new`}\n        type=\"checkbox\"\n      />\n      <label\n        style={{background: isOn && '#06D6A0'}}\n        className=\"react-switch-label\"\n        htmlFor={`react-switch-new`}\n      >\n        <label className=\"checkbox-label\" htmlFor={`react-switch-checkbox`}>{label}</label>\n        <span className={`react-switch-button`}/>\n      </label>\n    </>\n  )\n};\n\nexport default Switch;\n","import React, { useState, useEffect } from \"react\";\nimport Switch from \"./Switch\";\nimport {SketchPicker} from \"react-color\";\nimport {Link} from \"react-router-dom\";\nimport {Subject} from \"rxjs\";\nimport {throttleTime} from \"rxjs/operators\";\n\nconst onColor = new Subject();\n\nfunction Cascade({ socket }) {\n\n  const [loop, setLoop] = useState(false);\n\n  const toggleLoop = () => {\n    socket.emit(\"cascade\", {loop: !loop});\n    setLoop(prev => !prev);\n  };\n\n  useEffect(() => {\n    const subscription = onColor.pipe(\n      throttleTime(50)\n    ).subscribe(rgb => socket.emit(\"cascade\", {rgb, loop}));\n    return () => subscription.unsubscribe();\n  }, [socket, loop]);\n\n  return (\n    <div className=\"centered-container\">\n      <div className=\"settings\">\n        <Switch isOn={loop} handleToggle={toggleLoop}/>\n        <span className=\"label\">Loop</span>\n      </div>\n      <SketchPicker onChange={color => onColor.next(color.rgb)}/>\n      <div className=\"btn-group\">\n      <Link className=\"link-btn wide\" to=\"/\"><button className=\"btn btn-nav\">Back</button></Link>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Cascade;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Pattern from \"./Pattern\";\nimport Cascade from \"./Cascade\";\nimport '../css/App.css';\nimport io from \"socket.io-client\";\n\nconst socket = io();\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home socket={socket}/>\n        </Route>\n        <Route path=\"/pattern\">\n          <Pattern/>\n        </Route>\n        <Route path=\"/cascade\">\n          <Cascade socket={socket}/>\n        </Route>\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}